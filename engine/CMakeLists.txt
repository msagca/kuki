project(kuki_engine)
file(GLOB_RECURSE C_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/*.c")
file(GLOB_RECURSE CPP_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")
set(SHADER_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src/shader")
file(GLOB_RECURSE VERT_SOURCES "${SHADER_SOURCE_DIR}/*.vert")
file(GLOB_RECURSE FRAG_SOURCES "${SHADER_SOURCE_DIR}/*.frag")
set(SHADER_SOURCES "${VERT_SOURCES}" "${FRAG_SOURCES}")
add_library("${PROJECT_NAME}" STATIC "${C_SOURCES}" "${CPP_SOURCES}")
set_target_properties("${PROJECT_NAME}" PROPERTIES POSITION_INDEPENDENT_CODE ON)
include(GenerateExportHeader)
string(TOUPPER "${PROJECT_NAME}" PROJECT_NAME_UPPER)
generate_export_header(
  "${PROJECT_NAME}"
  BASE_NAME "${PROJECT_NAME}"
  EXPORT_MACRO_NAME "${PROJECT_NAME_UPPER}_API"
)
target_include_directories(
  "${PROJECT_NAME}"
  PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include" "${CMAKE_CURRENT_BINARY_DIR}"
)
target_link_libraries(
  "${PROJECT_NAME}"
  PUBLIC OpenGL::GL assimp glad glfw glm nlohmann_json spdlog stb tinyexr
)
target_sources("${PROJECT_NAME}" PRIVATE "${SHADER_SOURCES}")
install(DIRECTORY "${SHADER_SOURCE_DIR}" DESTINATION "${CMAKE_INSTALL_BINDIR}")
install(
  FILES "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}_export.h"
  DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
)
install(TARGETS "${PROJECT_NAME}" DESTINATION "${CMAKE_INSTALL_LIBDIR}")
add_custom_command(
  TARGET "${PROJECT_NAME}"
  POST_BUILD
  COMMAND
    "${CMAKE_COMMAND}" -E copy_directory "${SHADER_SOURCE_DIR}"
    $<TARGET_FILE_DIR:${PROJECT_NAME}>/shader
  COMMAND_EXPAND_LISTS
)
